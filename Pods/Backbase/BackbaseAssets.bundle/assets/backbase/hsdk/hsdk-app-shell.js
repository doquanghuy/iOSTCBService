/**
 * Name: hsdk-app-shell
 * Description: HSDK App Shell implements a generic application shell that can be used in hybrid mobile applications
 * Version: 1.6.0
 * SHA-1: f7189aca4c25d5b091e56227e206213bd890f3bc
 */
(function(exports){"use strict";var createAPI=function(api){return Object.assign(Object.create(null),api)};var createErrorFactory=function(componentName){return function(message){return new Error("["+componentName+"] "+message)}};var createTypeErrorFactory=function(componentName){return function(message){return new TypeError("["+componentName+"] "+message)}};var isArray=function(arg){return Array.isArray(arg)};var isFunction=function(arg){return typeof arg==="function"};var isNumber=function(arg){return typeof arg==="number"};var isObject=function(arg){return arg!==null&&typeof arg==="object"&&!Array.isArray(arg)};var isString=function(arg){return typeof arg==="string"};var createTypeError=createTypeErrorFactory("event-emitter");var throwIfInvalidEventListener=function(errorPrefix,eventListener){if(!isFunction(eventListener)){throw createTypeError(errorPrefix+": "+("Expected the event listener to be a function, but got '"+eventListener+"'"))}};var throwIfInvalidEventName=function(errorPrefix,eventName){if(!isString(eventName)){throw createTypeError(errorPrefix+": "+("Expected the name of the event to be a string, but got '"+eventName+"'"))}if(eventName.trim().length<1){throw createTypeError(errorPrefix+": The name of the event must contain at least 1 character")}};var createEventEmitter=function(instanceName){var all=new Map;var name=instanceName.toString();var getOrCreateListeners=function(eventName){var listeners=all.get(eventName);if(!listeners){listeners=[];all.set(eventName,listeners)}return listeners};var emit=function(eventName,payload){throwIfInvalidEventName("Could not emit the event",eventName);var listeners=all.get(eventName);if(listeners){listeners.slice().forEach((function(listener){listener(payload)}))}};var off=function(eventName,eventListener){var errorPrefix="Could not unsubscribe from the event";throwIfInvalidEventName(errorPrefix,eventName);throwIfInvalidEventListener(errorPrefix,eventListener);var listeners=all.get(eventName);if(listeners){var idx=listeners.indexOf(eventListener);if(idx!==-1){listeners.splice(idx,1)}}};var on=function(eventName,eventListener){var errorPrefix="Could not subscribe to the event";throwIfInvalidEventName(errorPrefix,eventName);throwIfInvalidEventListener(errorPrefix,eventListener);var listeners=getOrCreateListeners(eventName);listeners.push(eventListener)};return createAPI({emit:emit,name:name,off:off,on:on})};var generateUid=function(){return"xxxxxxxx".replace(/[x]/g,(function(){var r=Math.random()*16|0;return r.toString(16)}))};var createTypeError$1=createTypeErrorFactory("menu-navigation-layout.controller");var throwIfInvalidMenuItemIndex=function(errorPrefix,menuItemIndex,menuItems){if(!isNumber(menuItemIndex)){throw createTypeError$1(errorPrefix+": The menu item must be of type number")}var lastMenuItemIndex=menuItems.length-1;var isValidIndex=menuItemIndex>=0&&menuItemIndex<=lastMenuItemIndex;if(!isValidIndex){throw createTypeError$1(errorPrefix+": Invalid menu item index. The menu item index "+("must be in the range  0.."+lastMenuItemIndex))}};var createNoTransitionsError=function(errorPrefix){return createTypeError$1(errorPrefix+": The layout transitions must be set before")};var makeMenuNavigationLayoutController=function(navigationPipeline,transitionRegistry){return function(layoutState){var transitions=null;var getActiveMenuItem=function(){return layoutState.getActiveStackIndex()};var getActiveStack=function(){return layoutState.getActiveStack().getController()};var getMenuItems=function(){return layoutState.getMenuItems().slice()};var selectMenuItem=function(menuItemIndex){var errorPrefix="Could not select the menu item";if(menuItemIndex===layoutState.getActiveStackIndex()){return Promise.resolve()}throwIfInvalidMenuItemIndex("Could not select the menu item",menuItemIndex,layoutState.getMenuItems());var originViewInstance=layoutState.getActiveViewInstance();var updateState=function(){layoutState.changeActiveStack(menuItemIndex);return layoutState.getActiveViewInstance()};if(!transitions){throw createNoTransitionsError(errorPrefix)}var transition=transitions.selectMenuItem;return navigationPipeline.performNavigation(updateState,originViewInstance,transition.name)};var setTransitions=function(transitionsToSet){transitions=transitionsToSet;transitionRegistry.registerTransition(transitions.selectMenuItem)};return createAPI({getActiveMenuItem:getActiveMenuItem,getActiveStack:getActiveStack,getMenuItems:getMenuItems,selectMenuItem:selectMenuItem,setTransitions:setTransitions})}};var MENU_NAVIGATION_LAYOUT_NAME="MenuNavigationLayout";var validateViewInstanceId=function(viewInstanceId){if(!isString(viewInstanceId)){return["Expected the view reference to be of type string, "+('but "'+typeof viewInstanceId+'" was given')]}if(!viewInstanceId.trim()){return["Expected the view reference to be a string of at least one character"]}return[]};var createError=createErrorFactory("menu-navigation-layout");var createTypeError$2=createTypeErrorFactory("menu-navigation-layout");var throwIfInvalidMenuItems=function(errorPrefix,menuItems){if(!isArray(menuItems)||menuItems.length<1){throw createTypeError$2(errorPrefix+": No menu items were provided. "+"Make sure you provide an array of 'menuItems' in the "+"'layoutOptions' when you add the 'MenuNavigationLayout'")}};var throwIfInvalidLayoutOptions=function(errorPrefix,layoutOptions){throwIfInvalidMenuItems(errorPrefix,layoutOptions.menuItems)};var throwIfInvalidViewInstanceId=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$2(errorPrefix+": "+errors[0])}};var throwIfNotRootView=function(errorPrefix,menuItems,viewId){var menuItemIndex=menuItems.findIndex((function(menuItem){return menuItem.target===viewId}));if(menuItemIndex===-1){throw createError(errorPrefix+': Target view "'+viewId+'" must be a root view '+"defined in the array of `menuItems`. Please make sure you provide a target view "+"that was added as a menu item with the `layoutOptions` while adding the `MenuNavigationLayout`")}};var throwIfSameStack=function(errorPrefix,activeStackIndex,targetStackIndex){if(targetStackIndex===activeStackIndex){throw createError(errorPrefix+": The given target root view is the same "+"as the root view of the active stack")}};var makeMenuNavigationLayoutRenderState=function(){return function(layoutId,layoutState){var getRenderTree=function(){var id=layoutId;var name=MENU_NAVIGATION_LAYOUT_NAME;var active=layoutState.getActiveStackIndex();var stacks=layoutState.getStacks();var tree={active:active,stacks:stacks.map((function(childStack){return childStack.getRenderTree()}))};return{id:id,name:name,tree:tree}};return createAPI({getRenderTree:getRenderTree})}};var EVENT_AFTER_ACTIVE_STACK_CHANGED="AfterActiveStackChanged";var makeMenuNavigationLayoutState=function(stackNavigationLayoutFactory){return function(menuItems){var eventEmitter=createEventEmitter("menu-navigation-layout-state");var stacks=menuItems.map((function(menuItem){return stackNavigationLayoutFactory({},menuItem.target)}));var activeStackIndex=0;var publishActiveStackChange=function(){var payload={activeStackIndex:activeStackIndex};eventEmitter.emit(EVENT_AFTER_ACTIVE_STACK_CHANGED,payload)};var changeActiveStack=function(stackIndex){activeStackIndex=stackIndex;publishActiveStackChange()};var getActiveStack=function(){return stacks[activeStackIndex]};var getActiveStackIndex=function(){return activeStackIndex};var getActiveViewInstance=function(){return getActiveStack().getActiveViewInstance()};var getMenuItems=function(){return menuItems.slice()};var getStacks=function(){return stacks};var off=function(eventName,eventListener){eventEmitter.off(eventName,eventListener)};var on=function(eventName,eventListener){eventEmitter.on(eventName,eventListener)};return createAPI({changeActiveStack:changeActiveStack,getActiveStack:getActiveStack,getActiveStackIndex:getActiveStackIndex,getActiveViewInstance:getActiveViewInstance,getMenuItems:getMenuItems,getStacks:getStacks,off:off,on:on})}};var makeMenuNavigationLayout=function(navigationPipeline,stackNavigationLayoutFactory,transitionRegistry){var createState=makeMenuNavigationLayoutState(stackNavigationLayoutFactory);var createRenderState=makeMenuNavigationLayoutRenderState();var createController=makeMenuNavigationLayoutController(navigationPipeline,transitionRegistry);return function(layoutOptions){var layoutErrorPrefix="Could not create a menu layout";var menuLayoutOptions=layoutOptions;throwIfInvalidLayoutOptions(layoutErrorPrefix,menuLayoutOptions);var menuItems=menuLayoutOptions.menuItems.slice();var layoutId="menu-layout-"+generateUid();var layoutState=createState(menuItems);var layoutRenderState=createRenderState(layoutId,layoutState);var layoutController=createController(layoutState);var changeActiveStack=function(viewId){var errorPrefix="Could not change the active stack";throwIfNotRootView(errorPrefix,menuItems,viewId);var activeStackIndex=layoutState.getActiveStackIndex();var targetStackIndex=menuItems.findIndex((function(menuItem){return viewId===menuItem.target}));throwIfSameStack(errorPrefix,activeStackIndex,targetStackIndex);layoutState.changeActiveStack(targetStackIndex);return layoutState.getActiveViewInstance()};var getActiveViewInstance=function(){return layoutState.getActiveViewInstance()};var getChildLayoutById=function(id){var stacks=layoutState.getStacks();var stack=stacks.find((function(childStack){return childStack.getId()===id}));return stack||null};var getChildLayoutByViewInstance=function(viewInstanceId){var stacks=layoutState.getStacks();var stack=stacks.find((function(childStack){return childStack.hasViewInstance(viewInstanceId)}));return stack||null};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId("Could not get the path to the given view",viewInstanceId);var stackLayout=getChildLayoutByViewInstance(viewInstanceId);if(!stackLayout){return[]}return[layoutId,stackLayout.getId()]};var getName=function(){return MENU_NAVIGATION_LAYOUT_NAME};var getRenderTree=function(){return layoutRenderState.getRenderTree()};var hasViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId("Could not check if the stack has the view",viewInstanceId);var stacks=layoutState.getStacks();return stacks.some((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))};return createAPI({changeActiveStack:changeActiveStack,getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,hasViewInstance:hasViewInstance})}};var validateViewId=function(viewId){if(!isString(viewId)){return["Expected the view id to be of type string, "+('but "'+typeof viewId+'" was given')]}if(!viewId.trim()){return["Expected the view id reference to be a string of at least one character"]}return[]};var validateViewList=function(views){if(!Array.isArray(views)){return['Expected view list to be an array, but got "'+views+'" instead']}return[]};var createTypeError$3=createTypeErrorFactory("menu-navigation-layout");var createError$1=createErrorFactory("modals-navigation-layout");var throwIfInvalidInitialView=function(errorPrefix,viewId){if(viewId!==undefined){var errors=validateViewId(viewId);if(errors.length>0){throw createTypeError$3(errorPrefix+": The given initial view is invalid: "+errors[0])}}};var throwIfInvalidViewInstanceId$1=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$3(errorPrefix+": "+errors[0])}};var throwIfStackNotFound=function(errorPrefix,stackIndex,stackId){if(stackIndex===-1){throw createError$1(errorPrefix+': There is no navigation stack with id "'+stackId+'" found.')}};var createTypeError$4=createTypeErrorFactory("modals-navigation-layout.controller");var createNoTransitionsError$1=function(errorPrefix){return createTypeError$4(errorPrefix+": The layout transitions must be set before")};var makeModalsNavigationLayoutController=function(navigationPipeline,transitionRegistry){return function(layoutState){var transitions=null;var dismissModal=function(stackId){var errorPrefix="Could not close the modal stack";throwIfStackNotFound(errorPrefix,layoutState.getStackIndex(stackId),stackId);var updateState=function(){var targetViewInstance=layoutState.removeStack(stackId);return targetViewInstance||""};var originViewInstance=layoutState.getActiveViewInstance();if(!transitions){throw createNoTransitionsError$1(errorPrefix)}var transition=transitions.dismissModal;return navigationPipeline.performNavigation(updateState,originViewInstance,transition.name)};var getSize=function(){return layoutState.getStacks().length};var setTransitions=function(transitionsToSet){transitions=transitionsToSet;transitionRegistry.registerTransition(transitionsToSet.dismissModal)};return createAPI({dismissModal:dismissModal,getSize:getSize,setTransitions:setTransitions})}};var MODALS_NAVIGATION_LAYOUT_NAME="ModalsNavigationLayout";var EVENT_AFTER_STATE_CHANGED="AfterStateChanged";var makeModalsNavigationLayoutRenderState=function(){return function(layoutId,layoutState){var stacksToRender=layoutState.getStacks().slice();var handleLayoutStateChange=function(payload){stacksToRender.push.apply(stacksToRender,payload.added)};layoutState.on(EVENT_AFTER_STATE_CHANGED,handleLayoutStateChange);var getRenderTree=function(){var id=layoutId;var name=MODALS_NAVIGATION_LAYOUT_NAME;stacksToRender=stacksToRender.filter((function(stackToRender){return stackToRender.getRenderTree().tree.views.length}));var tree={stacks:stacksToRender.map((function(childStack){return childStack.getRenderTree()}))};return{id:id,name:name,tree:tree}};return createAPI({getRenderTree:getRenderTree})}};var makeModalsNavigationLayoutState=function(stackNavigationLayoutFactory){return function(initialViewId){var eventEmitter=createEventEmitter("modals-navigation-layout-state");var stacks=[];if(initialViewId){stacks.push(stackNavigationLayoutFactory({},initialViewId))}var publishStateChange=function(added,removed){var payload={added:added,removed:removed};eventEmitter.emit(EVENT_AFTER_STATE_CHANGED,payload)};var appendStack=function(target){var stack=stackNavigationLayoutFactory({},target);stacks.push(stack);publishStateChange([stack],[]);return stack.getRootView()};var getActiveStack=function(){return stacks[stacks.length-1]||null};var getActiveViewInstance=function(){var activeStack=getActiveStack();return activeStack?activeStack.getActiveViewInstance():null};var getStackIndex=function(stackId){return stacks.findIndex((function(stack){return stack.getId()===stackId}))};var getStacks=function(){return stacks};var off=function(eventName,eventListener){eventEmitter.off(eventName,eventListener)};var on=function(eventName,eventListener){eventEmitter.on(eventName,eventListener)};var removeStack=function(stackId){var stackIndex=getStackIndex(stackId);var stack=stacks[stackIndex];var previousStackIndex=stackIndex-1;var previousStack=stacks[previousStackIndex]||null;stack.clear();stacks.splice(stackIndex,1);publishStateChange([],[stack]);return previousStack?previousStack.getActiveViewInstance():null};return createAPI({appendStack:appendStack,getActiveStack:getActiveStack,getActiveViewInstance:getActiveViewInstance,getStackIndex:getStackIndex,getStacks:getStacks,off:off,on:on,removeStack:removeStack})}};var makeModalsNavigationLayout=function(navigationPipeline,stackNavigationLayoutFactory,transitionRegistry){var createState=makeModalsNavigationLayoutState(stackNavigationLayoutFactory);var createRenderState=makeModalsNavigationLayoutRenderState();var createController=makeModalsNavigationLayoutController(navigationPipeline,transitionRegistry);return function(layoutOptions,initialViewId){var layoutErrorPrefix="Could not create a modals layout";throwIfInvalidInitialView(layoutErrorPrefix,initialViewId);var layoutId="modals-layout-"+generateUid();var layoutState=createState(initialViewId);var layoutRenderState=createRenderState(layoutId,layoutState);var layoutController=createController(layoutState);var appendStack=function(targetView){return layoutState.appendStack(targetView)};var getActiveViewInstance=function(){return layoutState.getActiveViewInstance()};var getChildLayoutById=function(id){var stacks=layoutState.getStacks();var stack=stacks.find((function(childStack){return childStack.getId()===id}));return stack||null};var getChildLayoutByViewInstance=function(viewInstanceId){var stacks=layoutState.getStacks();var stack=stacks.find((function(childStack){return childStack.hasViewInstance(viewInstanceId)}));return stack||null};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$1("Could not get the path to the given view",viewInstanceId);var stackLayout=getChildLayoutByViewInstance(viewInstanceId);if(!stackLayout){return[]}return[layoutId,stackLayout.getId()]};var getName=function(){return MODALS_NAVIGATION_LAYOUT_NAME};var getRenderTree=function(){return layoutRenderState.getRenderTree()};var getSnapshot=function(){return layoutState.getStacks().map((function(childStack){return childStack.getSnapshot()}))};var hasViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$1("Could not check if the stack has the view",viewInstanceId);return layoutState.getStacks().some((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))};var removeStack=function(stackId){var stackIndex=layoutState.getStackIndex(stackId);throwIfStackNotFound("Could not remove the stack",stackIndex,stackId);return layoutState.removeStack(stackId)};return createAPI({appendStack:appendStack,getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,getSnapshot:getSnapshot,hasViewInstance:hasViewInstance,removeStack:removeStack})}};var createError$2=createErrorFactory("stack-navigation-layout");var createTypeError$5=createTypeErrorFactory("stack-navigation-layout");var throwIfCannotNavigateBack=function(errorPrefix,size){if(size<=1){throw createError$2(errorPrefix+": The stack must have more than one view")}};var throwIfInvalidInitialView$1=function(errorPrefix,viewId){var errors=validateViewId(viewId);if(errors.length>0){throw createTypeError$5(errorPrefix+": The given initial view id is invalid: "+errors[0])}};var throwIfInvalidViewId=function(errorPrefix,viewId){var errors=validateViewId(viewId);if(errors.length>0){throw createTypeError$5(errorPrefix+": "+errors[0])}};var throwIfInvalidViewInstanceId$2=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$5(errorPrefix+": "+errors[0])}};var throwIfLastView=function(errorPrefix,viewIndex,views){var lastIndex=views.length-1;if(viewIndex===lastIndex){throw createError$2(errorPrefix+": "+"There is nothing to remove, because the target view "+"is the last view in the navigation stack")}};var throwIfReplaceTheSameView=function(errorPrefix,viewA,viewB){if(viewA===viewB){throw createError$2(errorPrefix+": The target view and the last view in the stack "+('are the same view: "'+viewA+'"'))}};var throwIfStackEmpty=function(errorPrefix,stackSize){if(!stackSize){throw createError$2(errorPrefix+": The stack is empty")}};var throwIfViewNotFound=function(errorPrefix,viewId,viewIndex){if(viewIndex===-1){throw createError$2(errorPrefix+": There is no view for the given view "+viewId+" in the navigation stack")}};var createTypeError$6=createTypeErrorFactory("stack-navigation-layout.controller");var createNoTransitionsError$2=function(errorPrefix){return createTypeError$6(errorPrefix+": The layout transitions must be set before")};var makeStackNavigationLayoutController=function(navigationPipeline,transitionRegistry,viewInstanceRegistry){return function(layoutState){var transitions=null;var viewInstanceRegistryClient=viewInstanceRegistry.createClient("stack-layout-controller");var navigateTo=function(targetViewInstanceIndex,transitionName){var views=layoutState.getViewInstances();var originViewInstance=layoutState.getActiveViewInstance();var targetViewInstance=views[targetViewInstanceIndex];var targetView=viewInstanceRegistryClient.getViewIdByViewInstance(targetViewInstance);var updateState=function(){return layoutState.removeAllViewsAfter(targetView)};return navigationPipeline.performNavigation(updateState,originViewInstance,transitionName)};var canNavigateBack=function(){return layoutState.getViewInstances().length>1};var getActiveViewInstance=function(){return layoutState.getActiveViewInstance()};var getSize=function(){return layoutState.getViewInstances().length};var navigateBack=function(){var errorPrefix="Could not navigate back";throwIfCannotNavigateBack(errorPrefix,getSize());if(!transitions){throw createNoTransitionsError$2(errorPrefix)}var targetViewInstanceIndex=getSize()-2;var transition=transitions.navigateBack;return navigateTo(targetViewInstanceIndex,transition.name)};var navigateToRoot=function(){var errorPrefix="Could not navigate to the root";if(getSize()===1){return Promise.resolve()}if(!transitions){throw createNoTransitionsError$2(errorPrefix)}var targetViewInstanceIndex=0;var transition=transitions.navigateToRoot;return navigateTo(targetViewInstanceIndex,transition.name)};var setTransitions=function(transitionsToSet){transitions=transitionsToSet;transitionRegistry.registerTransition(transitions.navigateBack);transitionRegistry.registerTransition(transitions.navigateToRoot)};return createAPI({canNavigateBack:canNavigateBack,getActiveViewInstance:getActiveViewInstance,getSize:getSize,navigateBack:navigateBack,navigateToRoot:navigateToRoot,setTransitions:setTransitions})}};var STACK_NAVIGATION_LAYOUT_NAME="StackNavigationLayout";var EVENT_AFTER_STATE_CHANGED$1="AfterStateChanged";var makeStackNavigationLayoutRenderState=function(viewRegistry,viewInstanceRegistry){return function(layoutId,layoutState,layoutViewPool){var viewInstanceRegistryClient=viewInstanceRegistry.createClient("stack-navigation-layout-render-state");var viewsToRender=layoutState.getViewInstances().slice();var getViewByViewInstance=function(viewInstanceId){var viewId=viewInstanceRegistryClient.getViewIdByViewInstance(viewInstanceId);return viewRegistry.getViewById(viewId)};var handleLayoutStateChange=function(){updateRenderTree();updateViewPool()};var updateRenderTree=function(){viewsToRender.push.apply(viewsToRender,layoutState.getViewInstances().filter((function(viewInstanceId){return!viewsToRender.includes(viewInstanceId)})));viewsToRender=viewsToRender.filter((function(viewToRender){return viewInstanceRegistryClient.hasViewInstance(viewToRender)}))};var updateViewPool=function(){var availableViews=viewsToRender.filter((function(viewInstanceId){return!layoutState.hasViewInstance(viewInstanceId)}));layoutViewPool.setViewInstances(availableViews)};layoutState.on(EVENT_AFTER_STATE_CHANGED$1,handleLayoutStateChange);var getRenderTree=function(){var id=layoutId;var name=STACK_NAVIGATION_LAYOUT_NAME;updateRenderTree();updateViewPool();var tree={views:viewsToRender.map((function(viewInstanceId,index){var viewRecord=getViewByViewInstance(viewInstanceId);var title=viewRecord.title;var viewId=viewRecord.id;return{index:index,title:title,viewId:viewId,viewInstanceId:viewInstanceId}}))};return{id:id,name:name,tree:tree}};return createAPI({getRenderTree:getRenderTree})}};var findLast=function(array,callback){var currentIndex=array.length;while(currentIndex--){var arrayItem=array[currentIndex];if(callback(arrayItem,currentIndex)){return arrayItem}}return null};var makeStackNavigationLayoutState=function(viewInstanceRegistry){return function(layoutViewPool,initialViewId){var eventEmitter=createEventEmitter("stack-navigation-layout-state");var viewInstanceRegistryClient=viewInstanceRegistry.createClient("stack-layout-state");var initialViewInstanceInstanceId=viewInstanceRegistryClient.createViewInstance(initialViewId);var views=[initialViewInstanceInstanceId];var getOrCreateViewInstance=function(viewId){return layoutViewPool.getViewInstanceForView(viewId)||viewInstanceRegistryClient.createViewInstance(viewId)};var publishStateChange=function(added,removed){var payload={added:added,removed:removed};eventEmitter.emit(EVENT_AFTER_STATE_CHANGED$1,payload)};var removeViews=function(fromIndex){var removedViews=views.splice(fromIndex);removedViews.forEach((function(viewToRemove){viewInstanceRegistryClient.releaseView(viewToRemove)}));publishStateChange([],removedViews)};var appendView=function(viewId){var viewInstanceId=getOrCreateViewInstance(viewId);views.push(viewInstanceId);publishStateChange([viewInstanceId],[]);return viewInstanceId};var getActiveViewInstance=function(){return views[views.length-1]||null};var getRootView=function(){return views[0]||null};var getViewInstances=function(){return views};var hasViewInstance=function(viewInstanceId){return views.includes(viewInstanceId)};var off=function(eventName,eventListener){eventEmitter.off(eventName,eventListener)};var on=function(eventName,eventListener){eventEmitter.on(eventName,eventListener)};var removeAllViews=function(){return removeViews(0)};var removeAllViewsAfter=function(viewId){var errorPrefix="Could not remove the view(s) from the navigation stack";throwIfStackEmpty(errorPrefix,views.length);var viewInstanceId=findLast(views,(function(viewToTest){return viewId===viewInstanceRegistryClient.getViewIdByViewInstance(viewToTest)}));var viewIndex=viewInstanceId?views.indexOf(viewInstanceId):-1;throwIfViewNotFound(errorPrefix,viewId,viewIndex);throwIfLastView(errorPrefix,viewIndex,views);removeViews(viewIndex+1);return viewInstanceId};var removeAllViewsAfterRoot=function(){throwIfStackEmpty("Could not remove the view(s) from the navigation stack",views.length);removeViews(1);return getRootView()};var replaceLastView=function(viewId){throwIfStackEmpty("Could not replace the last view from the navigation stack",views.length);var lastIndex=views.length-1;var previousView=views[lastIndex];var newView=viewInstanceRegistryClient.createViewInstance(viewId);views[lastIndex]=newView;viewInstanceRegistryClient.releaseView(previousView);publishStateChange([newView],[previousView]);return newView};return createAPI({appendView:appendView,getActiveViewInstance:getActiveViewInstance,getRootView:getRootView,getViewInstances:getViewInstances,hasViewInstance:hasViewInstance,off:off,on:on,removeAllViews:removeAllViews,removeAllViewsAfter:removeAllViewsAfter,removeAllViewsAfterRoot:removeAllViewsAfterRoot,replaceLastView:replaceLastView})}};var makeStackNavigationLayoutViewPool=function(viewInstanceRegistry){return function(){var viewInstanceRegistryClient=viewInstanceRegistry.createClient("stack-navigation-layout-view-instance-pool");var viewInstancePool=new Set;var getViewInstanceForView=function(viewId){return Array.from(viewInstancePool).find((function(viewInstanceId){return viewId===viewInstanceRegistryClient.getViewIdByViewInstance(viewInstanceId)}))||null};var hasViewInstance=function(viewInstanceId){return viewInstancePool.has(viewInstanceId)};var setViewInstances=function(views){views.forEach((function(viewInstanceId){return viewInstancePool.add(viewInstanceId)}))};return createAPI({getViewInstanceForView:getViewInstanceForView,hasViewInstance:hasViewInstance,setViewInstances:setViewInstances})}};var makeStackNavigationLayout=function(viewRegistry,navigationPipeline,transitionRegistry,viewInstanceRegistry){var createState=makeStackNavigationLayoutState(viewInstanceRegistry);var createViewPool=makeStackNavigationLayoutViewPool(viewInstanceRegistry);var createRenderState=makeStackNavigationLayoutRenderState(viewRegistry,viewInstanceRegistry);var createController=makeStackNavigationLayoutController(navigationPipeline,transitionRegistry,viewInstanceRegistry);return function(layoutOptions,initialViewId){var layoutErrorPrefix="Could not create a new navigation stack";throwIfInvalidInitialView$1(layoutErrorPrefix,initialViewId);var layoutId="stack-layout-"+generateUid();var layoutViewPool=createViewPool();var layoutState=createState(layoutViewPool,initialViewId);var layoutRenderState=createRenderState(layoutId,layoutState,layoutViewPool);var layoutController=createController(layoutState);var viewInstanceRegistryClient=viewInstanceRegistry.createClient("stack-navigation-layout");var appendView=function(targetView){throwIfInvalidViewId("Could not append a view to the navigation stack",targetView);return layoutState.appendView(targetView)};var clear=function(){return layoutState.removeAllViews()};var getActiveViewInstance=function(){return layoutState.getActiveViewInstance()};var getChildLayoutById=function(){return null};var getChildLayoutByViewInstance=function(){return null};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$2("Could not get the path to the given view",viewInstanceId);return hasViewInstance(viewInstanceId)?[layoutId]:[]};var getName=function(){return STACK_NAVIGATION_LAYOUT_NAME};var getRenderTree=function(){return layoutRenderState.getRenderTree()};var getRootView=function(){return layoutState.getRootView()};var getSnapshot=function(){return{id:layoutId,views:layoutState.getViewInstances().slice()}};var hasViewInstance=function(viewInstanceIdToCheck){throwIfInvalidViewInstanceId$2("Could not check if the stack has the view",viewInstanceIdToCheck);return layoutState.getViewInstances().some((function(viewInstanceId){return viewInstanceId===viewInstanceIdToCheck}))};var removeAllViewsAfter=function(viewId){var errorPrefix="Could not remove the view(s) from the navigation stack";throwIfInvalidViewId(errorPrefix,viewId);return layoutState.removeAllViewsAfter(viewId)};var removeAllViewsAfterRoot=function(){return layoutState.removeAllViewsAfterRoot()};var replaceLastView=function(viewId){var errorPrefix="Could not replace the last view";throwIfInvalidViewId(errorPrefix,viewId);var lastViewId=viewInstanceRegistryClient.getViewIdByViewInstance(getActiveViewInstance());throwIfReplaceTheSameView(errorPrefix,viewId,lastViewId);return layoutState.replaceLastView(viewId)};return createAPI({appendView:appendView,clear:clear,getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,getRootView:getRootView,getSnapshot:getSnapshot,hasViewInstance:hasViewInstance,removeAllViewsAfter:removeAllViewsAfter,removeAllViewsAfterRoot:removeAllViewsAfterRoot,replaceLastView:replaceLastView})}};var createTypeError$7=createTypeErrorFactory("tabs-navigation-layout.controller");var throwIfInvalidTabIndex=function(errorPrefix,tabIndex,tabs){if(!isNumber(tabIndex)){throw createTypeError$7(errorPrefix+": The tab must be of type number")}var lastTabIndex=tabs.length-1;var isValidIndex=tabIndex>=0&&tabIndex<=lastTabIndex;if(!isValidIndex){throw createTypeError$7(errorPrefix+": Invalid tab index. The tab index must be in the range "+("0.."+lastTabIndex))}};var createNoTransitionsError$3=function(errorPrefix){return createTypeError$7(errorPrefix+": The layout transitions must be set before")};var makeTabsNavigationLayoutController=function(navigationPipeline,transitionRegistry){return function(layoutState){var transitions=null;var getActiveTab=function(){return layoutState.getActiveStackIndex()};var getActiveStack=function(){return layoutState.getActiveStack().getController()};var getTabs=function(){return layoutState.getTabs()};var selectTab=function(tabIndex){var errorPrefix="Could not select the tab";if(tabIndex===layoutState.getActiveStackIndex()){return Promise.resolve()}throwIfInvalidTabIndex(errorPrefix,tabIndex,layoutState.getTabs());if(!transitions){throw createNoTransitionsError$3(errorPrefix)}var originViewInstance=layoutState.getActiveViewInstance();var transition=transitions.selectTab;var updateState=function(){layoutState.changeActiveStack(tabIndex);return layoutState.getActiveViewInstance()};return navigationPipeline.performNavigation(updateState,originViewInstance,transition.name)};var setTransitions=function(transitionsToSet){transitions=transitionsToSet;transitionRegistry.registerTransition(transitions.selectTab)};return createAPI({getActiveStack:getActiveStack,getActiveTab:getActiveTab,getTabs:getTabs,selectTab:selectTab,setTransitions:setTransitions})}};var TABS_NAVIGATION_LAYOUT_NAME="TabsNavigationLayout";var makeTabsNavigationLayoutRenderState=function(){return function(layoutId,layoutState){var getRenderTree=function(){var id=layoutId;var name=TABS_NAVIGATION_LAYOUT_NAME;var active=layoutState.getActiveStackIndex();var stacks=layoutState.getStacks();var tree={active:active,stacks:stacks.map((function(childStack){return childStack.getRenderTree()}))};return{id:id,name:name,tree:tree}};return createAPI({getRenderTree:getRenderTree})}};var EVENT_AFTER_ACTIVE_STACK_CHANGED$1="AfterActiveStackChanged";var makeTabsNavigationLayoutState=function(stackNavigationLayoutFactory){return function(tabs){var eventEmitter=createEventEmitter("tabs-navigation-layout-state");var stacks=tabs.map((function(tab){return stackNavigationLayoutFactory({},tab.target)}));var activeStackIndex=0;var publishActiveStackChange=function(){var payload={activeStackIndex:activeStackIndex};eventEmitter.emit(EVENT_AFTER_ACTIVE_STACK_CHANGED$1,payload)};var changeActiveStack=function(stackIndex){activeStackIndex=stackIndex;publishActiveStackChange()};var getActiveStack=function(){return stacks[activeStackIndex]};var getActiveStackIndex=function(){return activeStackIndex};var getActiveViewInstance=function(){return getActiveStack().getActiveViewInstance()};var getStacks=function(){return stacks};var getTabs=function(){return tabs.slice()};var off=function(eventName,eventListener){eventEmitter.off(eventName,eventListener)};var on=function(eventName,eventListener){eventEmitter.on(eventName,eventListener)};return createAPI({changeActiveStack:changeActiveStack,getActiveStack:getActiveStack,getActiveStackIndex:getActiveStackIndex,getActiveViewInstance:getActiveViewInstance,getStacks:getStacks,getTabs:getTabs,off:off,on:on})}};var createError$3=createErrorFactory("tabs-navigation-layout");var createTypeError$8=createTypeErrorFactory("tabs-navigation-layout");var throwIfInvalidTabs=function(errorPrefix,tabs){if(!isArray(tabs)||tabs.length<1){throw createTypeError$8(errorPrefix+": No tabs were provided. "+"Make sure you provide an array of 'tabs' in the "+"'layoutOptions' when you add the 'TabsNavigationLayout'")}};var throwIfInvalidLayoutOptions$1=function(errorPrefix,layoutOptions){throwIfInvalidTabs(errorPrefix,layoutOptions.tabs)};var throwIfInvalidViewInstanceId$3=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$8(errorPrefix+": "+errors[0])}};var throwIfNotRootView$1=function(errorPrefix,tabs,viewId){var tabIndex=tabs.findIndex((function(tab){return tab.target===viewId}));if(tabIndex===-1){throw createError$3(errorPrefix+': Target view "'+viewId+'" must be a root view '+"defined in the array of `tabs`. Please make sure you provide a target view "+"that was added as a tab with the `layoutOptions` while adding the `TabsNavigationLayout`")}};var throwIfSameStack$1=function(errorPrefix,activeStackIndex,targetStackIndex){if(targetStackIndex===activeStackIndex){throw createError$3(errorPrefix+": The target root view is the same as "+"the root view of the active stack")}};var makeTabsNavigationLayout=function(navigationPipeline,stackNavigationLayoutFactory,transitionRegistry){var createState=makeTabsNavigationLayoutState(stackNavigationLayoutFactory);var createRenderState=makeTabsNavigationLayoutRenderState();var createController=makeTabsNavigationLayoutController(navigationPipeline,transitionRegistry);return function(layoutOptions){var layoutErrorPrefix="Could not create a tabs layout";var tabsLayoutOptions=layoutOptions;throwIfInvalidLayoutOptions$1(layoutErrorPrefix,tabsLayoutOptions);var tabs=tabsLayoutOptions.tabs.slice();var layoutId="tabs-layout-"+generateUid();var layoutState=createState(tabs);var layoutRenderState=createRenderState(layoutId,layoutState);var layoutController=createController(layoutState);var getActiveViewInstance=function(){return layoutState.getActiveViewInstance()};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$3("Could not get the path to the given view",viewInstanceId);var stackLayout=getChildLayoutByViewInstance(viewInstanceId);if(!stackLayout){return[]}return[layoutId,stackLayout.getId()]};var getName=function(){return TABS_NAVIGATION_LAYOUT_NAME};var changeActiveStack=function(viewId){var errorPrefix="Could not change the active stack";throwIfNotRootView$1(errorPrefix,tabs,viewId);var activeStackIndex=layoutState.getActiveStackIndex();var targetStackIndex=tabs.findIndex((function(tab){return viewId===tab.target}));throwIfSameStack$1(errorPrefix,activeStackIndex,targetStackIndex);layoutState.changeActiveStack(targetStackIndex);return layoutState.getActiveViewInstance()};var getChildLayoutById=function(id){var stacks=layoutState.getStacks();var stack=stacks.find((function(childStack){return childStack.getId()===id}));return stack||null};var getChildLayoutByViewInstance=function(viewInstanceId){var stacks=layoutState.getStacks();var stack=stacks.find((function(childStack){return childStack.hasViewInstance(viewInstanceId)}));return stack||null};var getRenderTree=function(){return layoutRenderState.getRenderTree()};var hasViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$3("Could not check if the stack has the view",viewInstanceId);var stacks=layoutState.getStacks();return stacks.some((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))};return createAPI({changeActiveStack:changeActiveStack,getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,hasViewInstance:hasViewInstance})}};var createNavigationError=function(navigationTypeName,message){var createError=createErrorFactory("navigation-type: "+navigationTypeName);return createError("Could not perform navigation: "+message)};var CHANGE_ROOT_NAVIGATION_TYPE_NAME="change-root";var createNavigationTypeChangeRoot=function(navigationState){return createAPI({name:CHANGE_ROOT_NAVIGATION_TYPE_NAME,updateNavigationState:function(origin,target){var supportedLayouts=[MENU_NAVIGATION_LAYOUT_NAME,TABS_NAVIGATION_LAYOUT_NAME];var pathToView=navigationState.getLayoutPathToViewInstance(origin);var tabsOrMenuLayout=pathToView.find((function(layout){return supportedLayouts.includes(layout.getName())}));if(!tabsOrMenuLayout){throw createNavigationError(CHANGE_ROOT_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+CHANGE_ROOT_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with a menu navigation layout or a tabs navigation layout")}return tabsOrMenuLayout.changeActiveStack(target)}})};var MODAL_CLOSE_NAVIGATION_TYPE_NAME="modal-close";var createNavigationTypeModalClose=function(navigationState){return createAPI({name:MODAL_CLOSE_NAVIGATION_TYPE_NAME,updateNavigationState:function(origin){var targetLayout=navigationState.getLayoutByName(MODALS_NAVIGATION_LAYOUT_NAME);if(!targetLayout){throw createNavigationError(MODAL_CLOSE_NAVIGATION_TYPE_NAME,"Could not find the '"+MODALS_NAVIGATION_LAYOUT_NAME+"' layout. "+"Make sure you add this layout by calling "+"'navigationController.addLayout(MODALS_NAVIGATION_LAYOUT_NAME)'")}var stackToDismiss=targetLayout.getChildLayoutByViewInstance(origin);if(!stackToDismiss){throw createNavigationError(MODAL_CLOSE_NAVIGATION_TYPE_NAME,'The target stack for the view "'+origin+'" was not found')}return targetLayout.removeStack(stackToDismiss.getId())||""}})};var MODAL_OPEN_NAVIGATION_TYPE_NAME="modal-open";var createNavigationTypeModalOpen=function(navigationState){return createAPI({name:MODAL_OPEN_NAVIGATION_TYPE_NAME,updateNavigationState:function(origin,target){var targetLayout=navigationState.getLayoutByName(MODALS_NAVIGATION_LAYOUT_NAME);if(!targetLayout){throw createNavigationError(MODAL_OPEN_NAVIGATION_TYPE_NAME,"Could not find the '"+MODALS_NAVIGATION_LAYOUT_NAME+"' layout. "+"Make sure you add this layout by calling "+"'navigationController.addLayout(MODALS_NAVIGATION_LAYOUT_NAME)'")}return targetLayout.appendStack(target)}})};var POP_NAVIGATION_TYPE_NAME="pop";var createNavigationTypePop=function(navigationState){return createAPI({name:POP_NAVIGATION_TYPE_NAME,updateNavigationState:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(POP_NAVIGATION_TYPE_NAME,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(POP_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+POP_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}return targetStackLayout.removeAllViewsAfter(target)}})};var PUSH_NAVIGATION_TYPE_NAME="push";var createNavigationTypePush=function(navigationState){return createAPI({name:PUSH_NAVIGATION_TYPE_NAME,updateNavigationState:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(PUSH_NAVIGATION_TYPE_NAME,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(PUSH_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+PUSH_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}return targetStackLayout.appendView(target)}})};var REPLACE_NAVIGATION_TYPE_NAME="replace";var createNavigationTypeReplace=function(navigationState){return createAPI({name:REPLACE_NAVIGATION_TYPE_NAME,updateNavigationState:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(REPLACE_NAVIGATION_TYPE_NAME,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(REPLACE_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+REPLACE_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}return targetStackLayout.replaceLastView(target)}})};var ROOT_NAVIGATION_TYPE_NAME="root";var createNavigationTypeRoot=function(navigationState,viewInstanceRegistry){var viewInstanceRegistryClient=viewInstanceRegistry.createClient("navigation-type-root");return createAPI({name:ROOT_NAVIGATION_TYPE_NAME,updateNavigationState:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(name,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(ROOT_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+ROOT_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}var rootViewInstance=targetStackLayout.getRootView();var rootItem=viewInstanceRegistryClient.getViewIdByViewInstance(rootViewInstance);if(rootItem!==target){throw createNavigationError(name,"The target view must match the root view in the stack")}return targetStackLayout.removeAllViewsAfterRoot()}})};var createError$4=createErrorFactory("navigation-controller");var throwIfNavigationAlreadyStarted=function(errorPrefix,navigationStartedFlag){if(navigationStartedFlag){throw createError$4(errorPrefix+": Navigation has already started")}};var throwIfInvalidNavigationEvent=function(errorPrefix,event,eventPayload){if(!eventPayload){throw createError$4(errorPrefix+': Event payload for the "'+event+'" navigation event is missing')}if(!eventPayload.origin){throw createError$4(errorPrefix+": The 'origin' property is missing in "+('the payload of the "'+event+'" navigation event'))}if(validateViewInstanceId(eventPayload.origin).length){throw createError$4(errorPrefix+': The origin "'+eventPayload.origin+'" must be a valid view instance id')}};var throwIfNoInitialView=function(errorPrefix,rootNavigationLinks){if(!rootNavigationLinks.length){throw createError$4(errorPrefix+": The portal modal must have at least one view "+"with mainNavigation='true' property.")}};var throwIfNoLayouts=function(errorPrefix,layouts){if(!layouts.length){throw createError$4(errorPrefix+": The application shell must use at least one layout. "+"Make sure you add a layout by calling 'navigationController.addLayout()' "+"before starting navigation.")}};var throwIfUnknownNavigation=function(errorPrefix,navigationTypeName,origin,possibleNavigationTargets,targetView){var possibleTargets=possibleNavigationTargets.map((function(navigationRecord){return"  - "+navigationRecord.target})).join("\n");var possibleTargetsMessage=possibleNavigationTargets.length>0?'\n\nPossible targets for the view instance "'+origin+'" are:\n\n'+possibleTargets+"\n\n":'There are no possible targets for view "'+origin+'". ';if(navigationTypeName===null){throw createError$4(errorPrefix+": There is no registered navigation "+('to view "'+targetView+'" from the view "'+origin+'". ')+(""+possibleTargetsMessage)+"Please make sure you have configured possible targets for this view in the portal model.\n")}};var throwIfItemNotFoundByViewInstanceId=function(errorPrefix,viewId,viewInstanceId){if(!viewId){throw createError$4(errorPrefix+': There are no views associated with the given view instance: "'+viewInstanceId+'"')}};var createNavigationController=function(dependencies){var navigationGraphRegistry=dependencies.navigationGraphRegistry,navigationMenu=dependencies.navigationMenu,navigationPipeline=dependencies.navigationPipeline,navigationState=dependencies.navigationState,navigationTypeRegistry=dependencies.navigationTypeRegistry,pubsub=dependencies.pubsub,transitionsConfig=dependencies.transitionsConfig,viewInstanceRegistry=dependencies.viewInstanceRegistry;var rootNavigationLinks=navigationMenu.getRootNavigationLinks();var viewInstanceRegistryClient=viewInstanceRegistry.createClient("navigation-controller");throwIfNoInitialView("Could not create the navigation controller",rootNavigationLinks);var navigationStartedFlag=false;var initializeNavigationEvents=function(){var navigations=navigationGraphRegistry.getRecords();navigations.forEach((function(navigation){var navigationEvent=navigation.event;var targetView=navigation.target;if(navigationEvent){var listener=function(eventPayload){throwIfInvalidNavigationEvent("Could not handle a navigation event",navigationEvent,eventPayload);var navigationEventPayload=eventPayload;var origin=navigationEventPayload.origin;navigate(origin,targetView)};pubsub.subscribe(navigationEvent,listener)}}))};var navigate=function(originViewInstance,targetView){var errorPrefix="Could not perform navigation";var originView=viewInstanceRegistryClient.getViewIdByViewInstance(originViewInstance);throwIfItemNotFoundByViewInstanceId(errorPrefix,originView,originViewInstance);var navigationTypeName=navigationGraphRegistry.getNavigationType(originView,targetView);var possibleNavigationTargets=navigationGraphRegistry.getPossibleTargets(originView);throwIfUnknownNavigation(errorPrefix,navigationTypeName,originView,possibleNavigationTargets,targetView);var transitionName=transitionsConfig.getTransitionFor(navigationTypeName);var navigationType=navigationTypeRegistry.getNavigationTypeByName(navigationTypeName);var updateNavigationState=function(){return navigationType.updateNavigationState(originViewInstance,targetView)};return navigationPipeline.performNavigation(updateNavigationState,originViewInstance,transitionName)};var startNavigation=function(){var errorPrefix="Could not start navigation";var layouts=navigationState.getTopLevelLayouts();throwIfNavigationAlreadyStarted(errorPrefix,navigationStartedFlag);throwIfNoLayouts(errorPrefix,layouts);initializeNavigationEvents();var initialViewInstance=navigationState.getActiveViewInstance();navigationStartedFlag=true;return viewInstanceRegistryClient.whenViewInstanceReady(initialViewInstance).then((function(){navigationPipeline.performInitialNavigation(initialViewInstance)}))};return createAPI({navigate:navigate,startNavigation:startNavigation})};var getRecordsFromPortalModel=function(views){var records=[];views.forEach((function(view){view.navigation.forEach((function(navigation){var event=navigation.event,target=navigation.target,type=navigation.type;var origin=view.id;records.push({event:event,origin:origin,target:target,type:type})}))}));return records};var createNavigationGraph=function(views){var records=getRecordsFromPortalModel(views);var getRecords=function(){return records};var getNavigationType=function(origin,target){var matchingRecord=records.find((function(record){return record.origin===origin&&record.target===target}));return matchingRecord?matchingRecord.type:null};var getPossibleTargets=function(origin){return records.filter((function(record){return record.origin===origin}))};return createAPI({getNavigationType:getNavigationType,getPossibleTargets:getPossibleTargets,getRecords:getRecords})};var createNavigationHistory=function(navigationState,nativeBackButtonPlugin){var navigateBack=function(){var activeLayout=navigationState.getActiveLayout();var activeLayoutController=activeLayout.getController();activeLayoutController.canNavigateBack()?activeLayoutController.navigateBack():nativeBackButtonPlugin.performNativeBack()};if(nativeBackButtonPlugin){nativeBackButtonPlugin.enable((function(){navigateBack()}))}};var createError$5=createErrorFactory("navigation-layout-registry");var throwIfInvalidLayoutName=function(errorPrefix,layoutName){if(!isString(layoutName)){throw createError$5(errorPrefix+": Layout name must be a string")}if(!layoutName){throw createError$5(errorPrefix+": Layout name cannot be an empty string")}};var throwIfInvalidLayoutFactory=function(errorPrefix,layoutFactory){if(!isFunction(layoutFactory)){throw createError$5(errorPrefix+": The `layoutFactory` parameter must be a function")}};var throwIfAlreadyRegistered=function(errorPrefix,layoutName,registry){if(registry.has(layoutName)){throw createError$5(errorPrefix+": There is already registered layout with name "+layoutName)}};var createNavigationLayoutRegistry=function(){var registry=new Map;var getLayoutFactory=function(layoutName){var errorPrefix="Could not find a layout";throwIfInvalidLayoutName(errorPrefix,layoutName);return registry.get(layoutName)||null};var getLayoutNameList=function(){return Array.from(registry.keys())};var registerLayoutFactory=function(layoutName,layoutFactory){var errorPrefix="Could not register layout";throwIfInvalidLayoutName(errorPrefix,layoutName);throwIfInvalidLayoutFactory(errorPrefix,layoutFactory);throwIfAlreadyRegistered(errorPrefix,layoutName,registry);registry.set(layoutName,layoutFactory)};return createAPI({getLayoutFactory:getLayoutFactory,getLayoutNameList:getLayoutNameList,registerLayoutFactory:registerLayoutFactory})};var createError$6=createErrorFactory("navigation-layout-tree");var throwIfLayoutNotFound=function(errorPrefix,layout,layoutId){if(!layout){throw createError$6(errorPrefix+': There is no layout with id "'+layoutId+'". '+"Make sure you pass the id of an existing layout.")}};var throwIfUnknownLayout=function(errorPrefix,layoutName,layout,registeredLayouts){if(!layout){var layouts=registeredLayouts.join(", ");throw createError$6(errorPrefix+": There is no registered layout with name '"+layoutName+"'. "+("Please use one of the following layouts: "+layouts))}};var EVENT_NAVIGATION_LAYOUT_TREE_AFTER_LAYOUT_ADDED="NavigationLayoutTree.AfterLayoutAdded";var createNavigationLayoutTree=function(eventEmitter,navigationLayoutRegistry,navigationState){var createLayoutInstance=function(layoutFactory,layoutOptions){return layoutFactory(layoutOptions)};var addLayout=function(layoutName,layoutOptions){var errorPrefix="Could not use layout";var layoutFactory=navigationLayoutRegistry.getLayoutFactory(layoutName);var availableLayouts=navigationLayoutRegistry.getLayoutNameList();throwIfUnknownLayout(errorPrefix,layoutName,layoutFactory,availableLayouts);navigationState.addLayout(createLayoutInstance(layoutFactory,layoutOptions));eventEmitter.emit(EVENT_NAVIGATION_LAYOUT_TREE_AFTER_LAYOUT_ADDED,{})};var getLayoutController=function(layoutId){var layout=navigationState.getLayoutById(layoutId);throwIfLayoutNotFound("Could not get a layout controller",layout,layoutId);return layout.getController()};return createAPI({addLayout:addLayout,getLayoutController:getLayoutController})};var createNavigationMenu=function(views){var rootNavigationLinks=views.filter((function(view){return view.mainNavigation})).map((function(view){return{caption:view.title,icon:view.menuIcon,target:view.id}}));var getRootNavigationLinks=function(){return rootNavigationLinks};return createAPI({getRootNavigationLinks:getRootNavigationLinks})};var blockUserInteraction=function(rootElement){var disableUserInteraction=function(){rootElement.style.setProperty("pointer-events","none","important")};var enableUserInteraction=function(){rootElement.style.removeProperty("pointer-events")};return function(promiseToWait){disableUserInteraction();return Promise.resolve(promiseToWait).then((function(value){enableUserInteraction();return value}),(function(reason){enableUserInteraction();return Promise.reject(reason)}))}};var createError$7=createErrorFactory("navigation-pipeline");var createTypeError$9=createTypeErrorFactory("navigation-pipeline");var throwIfInvalidNavigateFunction=function(errorPrefix,navigateFunction){if(!isFunction(navigateFunction)){throw createTypeError$9(errorPrefix+": The first parameter 'navigate' must be of type function")}};var throwIfInvalidTransitionName=function(errorPrefix,transitionName){if(!isString(transitionName)){throw createTypeError$9(errorPrefix+": The given transition name is invalid: The transition name must be a string")}if(!transitionName.length){throw createTypeError$9(errorPrefix+": The given transition name is invalid: The transition name cannot be empty")}};var throwIfInvalidViewInstanceId$4=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$9(errorPrefix+": "+errors[0])}};var throwIfNoInitialTransition=function(errorPrefix,initialTransition){if(!initialTransition){throw createError$7(errorPrefix+": Initial transition has not been set")}};var throwIfNoTransition=function(errorPrefix,transition,transitionName){if(!transition){throw createError$7(errorPrefix+': There is no registered transition with the name "'+transitionName+'". '+"Make sure you register it before using.")}};var EVENT_NAVIGATION_PIPELINE_BEFORE_NAVIGATE="NavigationPipeline.BeforeNavigate";var EVENT_NAVIGATION_PIPELINE_AFTER_NAVIGATE="NavigationPipeline.AfterNavigate";var EVENT_NAVIGATION_PIPELINE_BEFORE_TRANSITION_START="NavigationPipeline.BeforeTransitionEnd";var EVENT_NAVIGATION_PIPELINE_AFTER_TRANSITION_END="NavigationPipeline.AfterTransitionEnd";var NavigationProgress;(function(NavigationProgress){NavigationProgress["AfterNavigate"]="afterNavigate";NavigationProgress["AfterTransitionEnd"]="afterTransitionEnd";NavigationProgress["BeforeNavigate"]="beforeNavigate";NavigationProgress["BeforeTransitionStart"]="beforeTransitionStart"})(NavigationProgress||(NavigationProgress={}));var createNavigationPipeline=function(eventEmitter,viewRegistry,navigationState,rootElement,transitionRegistry,transitionsConfig,viewInstanceRegistry){var viewInstanceRegistryClient=viewInstanceRegistry.createClient("navigation-pipeline");var navigationInProgressFlag=false;var blockUserInteractionWhile=blockUserInteraction(rootElement);var applyInitialTransition=function(transition,targetViewInstance){return blockUserInteractionWhile(Promise.resolve(transition.run({target:{view:getViewIdByViewInstanceId(targetViewInstance),viewInstance:targetViewInstance}})))};var applyTransition=function(transition,originViewInstance,targetViewInstance){return Promise.resolve(transition.run({origin:{view:getViewIdByViewInstanceId(originViewInstance),viewInstance:originViewInstance},target:{view:getViewIdByViewInstanceId(targetViewInstance),viewInstance:targetViewInstance}}))};var getViewIdByViewInstanceId=function(viewInstanceId){var viewId=viewInstanceRegistryClient.getViewIdByViewInstance(viewInstanceId);return viewRegistry.getViewById(viewId)};var ifNoActiveNavigation=function(navigationFn){return new Promise((function(resolve){if(navigationInProgressFlag){console.debug("[navigation-controller] Ignore navigation intent: "+"The previous navigation has not finished yet");resolve();return}resolve(navigationFn())}))};var progressToEvent=function(progress){if(progress===NavigationProgress.BeforeNavigate){return EVENT_NAVIGATION_PIPELINE_BEFORE_NAVIGATE}if(progress===NavigationProgress.AfterNavigate){return EVENT_NAVIGATION_PIPELINE_AFTER_NAVIGATE}if(progress===NavigationProgress.BeforeTransitionStart){return EVENT_NAVIGATION_PIPELINE_BEFORE_TRANSITION_START}return EVENT_NAVIGATION_PIPELINE_AFTER_TRANSITION_END};var updateNavigationState=function(navigateFunction){var targetViewInstance=navigateFunction();return targetViewInstance||navigationState.getActiveViewInstance()};var performInitialNavigation=function(initialViewInstance){var initialTransition=transitionRegistry.getInitialTransition();throwIfNoInitialTransition("Could not perform initial navigation",initialTransition);return applyInitialTransition(initialTransition,initialViewInstance)};var performNavigation=function(navigateFunction,origin,transitionName){return ifNoActiveNavigation((function(){return blockUserInteractionWhile(new Promise((function(resolve,reject){var errorPrefix="Could not perform navigation";throwIfInvalidViewInstanceId$4(errorPrefix,origin);throwIfInvalidNavigateFunction(errorPrefix,navigateFunction);throwIfInvalidTransitionName(errorPrefix,transitionName);var publishProgressEvent=function(progress,originViewInstance,targetViewInstance){return eventEmitter.emit(progressToEvent(progress),{originViewInstance:originViewInstance,progress:progress,targetViewInstance:targetViewInstance})};viewInstanceRegistryClient.retainView(origin);var transition=transitionRegistry.getTransitionByName(transitionName);throwIfNoTransition(errorPrefix,transition,transitionName);navigationInProgressFlag=true;publishProgressEvent(NavigationProgress.BeforeNavigate,origin,null);var target=updateNavigationState(navigateFunction);viewInstanceRegistryClient.retainView(target);publishProgressEvent(NavigationProgress.AfterNavigate,origin,target);var handleTransitionEnd=function(){navigationInProgressFlag=false;viewInstanceRegistryClient.releaseView(origin);viewInstanceRegistryClient.releaseView(target);viewInstanceRegistryClient.cleanUp();publishProgressEvent(NavigationProgress.AfterTransitionEnd,origin,target);resolve()};var handleTransitionError=function(error){return reject(error)};publishProgressEvent(NavigationProgress.BeforeTransitionStart,origin,target);viewInstanceRegistryClient.whenViewInstanceReady(target).then((function(){applyTransition(transition,origin,target).then(handleTransitionEnd,handleTransitionError)}))})))}))};return createAPI({performInitialNavigation:performInitialNavigation,performNavigation:performNavigation})};var createError$8=createErrorFactory("navigation-state");var createTypeError$a=createTypeErrorFactory("navigation-state");var throwIfDuplicatedLayout=function(errorPrefix,layoutToAdd,layouts){var layoutName=layoutToAdd.getName();var alreadyAdded=Boolean(layouts.find((function(layout){return layout.getName()===layoutName})));if(alreadyAdded){throw createError$8(errorPrefix+": The '"+layoutName+"' layout was already added")}};var throwIfInvalidLayoutId=function(errorPrefix,layoutId){if(!isString(layoutId)||!layoutId.trim().length){throw createError$8(errorPrefix+': The given parameter "'+layoutId+'" is invalid layout id')}};var throwIfInvalidViewInstanceId$5=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$a(errorPrefix+": "+errors[0])}};var createNavigationState=function(){var layouts=[];var addLayout=function(layout){var errorPrefix="Could not add a layout";throwIfDuplicatedLayout(errorPrefix,layout,layouts);layouts.push(layout)};var getActiveLayout=function(){var index=layouts.length;while(index--){var layout=layouts[index];var activeViewInstance=layout.getActiveViewInstance();if(activeViewInstance){return layout.getChildLayoutByViewInstance(activeViewInstance)}}return null};var getActiveViewInstance=function(){var index=layouts.length;while(index--){var layout=layouts[index];var activeViewInstance=layout.getActiveViewInstance();if(activeViewInstance){return activeViewInstance}}return null};var getLayoutById=function(layoutId){throwIfInvalidLayoutId("Could not get a layout by id",layoutId);var index=layouts.length;while(index--){var layout=layouts[index];if(layout.getId()===layoutId){return layout}var childLayout=layout.getChildLayoutById(layoutId);if(childLayout){return childLayout}}return null};var getLayoutByName=function(layoutName){return layouts.find((function(layout){return layout.getName()===layoutName}))||null};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$5("Could not find a layout path to the given view",viewInstanceId);var pathToViewInstance=[];var index=layouts.length;while(index--){var layout=layouts[index];if(layout.hasViewInstance(viewInstanceId)){var path=layout.getLayoutPathToViewInstance(viewInstanceId);pathToViewInstance.push.apply(pathToViewInstance,[layout.getId()].concat(path))}}return pathToViewInstance.map((function(layoutId){return getLayoutById(layoutId)}))};var getTopLevelLayouts=function(){return layouts.slice()};var getRenderTree=function(){var trees=layouts.map((function(layout){return layout.getRenderTree()}));return{layouts:trees}};var getRootLayout=function(){return layouts[0]||null};return createAPI({addLayout:addLayout,getActiveLayout:getActiveLayout,getActiveViewInstance:getActiveViewInstance,getLayoutById:getLayoutById,getLayoutByName:getLayoutByName,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getRenderTree:getRenderTree,getRootLayout:getRootLayout,getTopLevelLayouts:getTopLevelLayouts})};var validateNavigationTypeName=function(navigationTypeName){if(!isString(navigationTypeName)){return["Expected the navigation type "+('to be of type string, but "'+navigationTypeName+'" was given')]}if(navigationTypeName.trim().length===0){return["Expected the navigation type to be a string of at least one character"]}return[]};var validateNavigationTypeFunction=function(navigationTypeFunction){if(!isFunction(navigationTypeFunction)){return["Expected the navigation type function to be a function, "+("but '"+navigationTypeFunction+"' was given")]}return[]};var createError$9=createErrorFactory("navigation-type-registry");var createTypeError$b=createTypeErrorFactory("navigation-type-registry");var throwIfInvalidNavigationType=function(errorPrefix,navigationType){var nameValidationErrors=validateNavigationTypeName(navigationType.name);var functionValidationErrors=validateNavigationTypeFunction(navigationType.updateNavigationState);if(nameValidationErrors.length>0){throw createTypeError$b(errorPrefix+": "+nameValidationErrors[0])}if(functionValidationErrors.length>0){throw createTypeError$b(errorPrefix+": "+functionValidationErrors[0])}};var throwIfAlreadyRegistered$1=function(errorPrefix,records,navigationType){if(records.has(navigationType.name)){throw createError$9(errorPrefix+": "+"There is already a navigation type function "+("registered with the name \"'"+navigationType.name+"'\""))}};var createNavigationTypeRegistry=function(){var records=new Map;var getNavigationTypeByName=function(name){var navigationType=records.get(name);if(!navigationType){return null}return navigationType};var registerNavigationType=function(navigationType){var errorPrefix="Could not register a navigation type";throwIfInvalidNavigationType(errorPrefix,navigationType);throwIfAlreadyRegistered$1(errorPrefix,records,navigationType);var name=navigationType.name,updateNavigationState=navigationType.updateNavigationState;records.set(navigationType.name,{name:name,updateNavigationState:updateNavigationState})};return createAPI({getNavigationTypeByName:getNavigationTypeByName,registerNavigationType:registerNavigationType})};var createRenderTree=function(navigationState){var getRenderTree=function(){return navigationState.getRenderTree()};return createAPI({getRenderTree:getRenderTree})};var validateTransitionName=function(transitionName){if(typeof transitionName!=="string"){return["Expected the transition name to be of type string, "+('but "'+typeof transitionName+'" was given')]}if(transitionName.trim().length===0){return["Expected the transition name to be a string of at least one character"]}return[]};var validateTransitionFunction=function(transitionFunction){if(typeof transitionFunction!=="function"){return["Expected the transition function to be of type function, "+('but "'+typeof transitionFunction+'" was given')]}return[]};var createTypeError$c=createTypeErrorFactory("transition-registry");var throwIfInvalidTransition=function(errorPrefix,transition){if(!isObject(transition)){throw createTypeError$c(errorPrefix+": The given parameter is not a valid transition: "+"The transition must be of the type object.")}var nameErrors=validateTransitionName(transition.name);if(nameErrors.length>0){throw createTypeError$c(errorPrefix+": "+nameErrors[0])}var runFunctionErrors=validateTransitionFunction(transition.run);if(runFunctionErrors.length>0){throw createTypeError$c(errorPrefix+": "+runFunctionErrors[0])}};var createTransitionRegistry=function(){var records=new Map;var initialTransition=null;var copyTransition=function(transition){return{name:transition.name,run:transition.run}};var copyInitialTransition=function(transition){return{name:transition.name,run:transition.run}};var getInitialTransition=function(){return initialTransition?copyInitialTransition(initialTransition):null};var getTransitionByName=function(transitionName){return records.get(transitionName)||null};var registerInitialTransition=function(initialTransitionToSet){throwIfInvalidTransition("Could not set the initial transition",initialTransitionToSet);initialTransition=copyInitialTransition(initialTransitionToSet)};var registerTransition=function(transitionToRegister){var errorPrefix="Could not register the transition";throwIfInvalidTransition(errorPrefix,transitionToRegister);records.set(transitionToRegister.name,copyTransition(transitionToRegister))};return createAPI({getInitialTransition:getInitialTransition,getTransitionByName:getTransitionByName,registerInitialTransition:registerInitialTransition,registerTransition:registerTransition})};var createError$a=createErrorFactory("transition-registry");var createNoTransitionsError$4=function(errorPrefix){throw createError$a(errorPrefix+": The navigation transitions must be set first. "+"Make sure you set them by using the"+"'navigationConfig.setNavigationTransitions()' method before using it.")};var throwIfInvalidTransitions=function(errorPrefix,navigationTypeRegistry,transitions){var isKnownNavigationType=function(navigationTypeName){return Boolean(navigationTypeRegistry.getNavigationTypeByName(navigationTypeName))};if(!isObject(transitions)){throw createError$a("Expected the transitions to be of type object, "+('but "'+transitions+'" was given'))}Object.keys(transitions).forEach((function(navigationTypeName){if(!isKnownNavigationType(navigationTypeName)){throw createError$a(errorPrefix+': Unknown navigation type "'+navigationTypeName+'"')}}))};var createTransitionsConfig=function(navigationTypeRegistry,transitionRegistry){var transitionMap=null;var getTransitionFor=function(navigationTypeName){if(!transitionMap){throw createNoTransitionsError$4("Could not get the transition")}var transition=transitionMap.get(navigationTypeName);return transition.name};var setTransitions=function(navigationTransitionsToSet){throwIfInvalidTransitions("Could not set the navigation transitions",navigationTypeRegistry,navigationTransitionsToSet);transitionMap=new Map(Object.entries(navigationTransitionsToSet));transitionMap.forEach((function(transition){transitionRegistry.registerTransition(transition)}))};return createAPI({getTransitionFor:getTransitionFor,setTransitions:setTransitions})};var EVENT_VIEW_REGISTRY_VIEW_DELETED="ViewInstanceRegistry.ViewDeleted";var EVENT_VIEW_REGISTRY_VIEW_READY="ViewInstanceRegistry.ViewInstanceReady";var createError$b=createErrorFactory("view-instance-registry-client");var throwIfInvalidViewInstanceId$6=function(errorPrefix,viewInstanceId){if(!isString(viewInstanceId)){throw createError$b(errorPrefix+": The view reference must be a string")}if(!viewInstanceId){throw createError$b(errorPrefix+": The view reference cannot be an empty string")}};var throwIfInvalidViewId$1=function(errorPrefix,viewId){if(!isString(viewId)){throw createError$b(errorPrefix+": The view reference must be a string")}if(!viewId){throw createError$b(errorPrefix+": The view reference cannot be an empty string")}};var throwIfViewNotFound$1=function(errorPrefix,viewInstanceId,viewInstanceRegistryRecord){if(!viewInstanceRegistryRecord){throw createError$b(errorPrefix+": There is no registered view `"+viewInstanceId+"` in the registry")}};var makeViewInstanceRegistryClient=function(eventEmitter,registry){return function(clientName){var clientId=clientName+"-"+generateUid();var cleanUp=function(){var hasDeletedViews=false;registry.forEach((function(record,key){if(record.references.length===0){registry.delete(key);hasDeletedViews=true}}));if(hasDeletedViews){eventEmitter.emit(EVENT_VIEW_REGISTRY_VIEW_DELETED,{})}};var createViewInstance=function(viewId){var errorPrefix="Could not register the given view";throwIfInvalidViewId$1(errorPrefix,viewId);var viewInstanceId="view-"+viewId+"-"+generateUid();registry.set(viewInstanceId,{ready:false,references:[clientId],viewId:viewId});return viewInstanceId};var getViewIdByViewInstance=function(viewInstanceId){var errorPrefix="Could not find the view for the given view";throwIfInvalidViewInstanceId$6(errorPrefix,viewInstanceId);var record=registry.get(viewInstanceId);return record?record.viewId:null};var hasViewInstance=function(viewInstanceId){return registry.has(viewInstanceId)};var off=function(eventName,listener){eventEmitter.off(eventName,listener)};var on=function(eventName,listener){eventEmitter.on(eventName,listener)};var releaseView=function(viewInstanceId){var errorPrefix="Could not find the view for the given view";throwIfInvalidViewInstanceId$6(errorPrefix,viewInstanceId);var viewInstanceRegistryRecord=registry.get(viewInstanceId);if(viewInstanceRegistryRecord){var references=viewInstanceRegistryRecord.references;var index=references.indexOf(clientId);if(index!==-1){references.splice(index,1)}}};var retainView=function(viewInstanceId){var errorPrefix="Could not retain the view";throwIfInvalidViewInstanceId$6(errorPrefix,viewInstanceId);var viewInstanceRegistryRecord=registry.get(viewInstanceId);throwIfViewNotFound$1(errorPrefix,viewInstanceId,viewInstanceRegistryRecord);var viewInstanceRegistryRecordIds=viewInstanceRegistryRecord.references;if(!viewInstanceRegistryRecordIds.includes(clientId)){viewInstanceRegistryRecordIds.push(clientId)}};var setViewInstanceReady=function(viewInstanceId){var errorPrefix="Could not set view ready";throwIfInvalidViewInstanceId$6(errorPrefix,viewInstanceId);var record=registry.get(viewInstanceId);throwIfViewNotFound$1(errorPrefix,viewInstanceId,record);if(!record.ready){record.ready=true;eventEmitter.emit(EVENT_VIEW_REGISTRY_VIEW_READY,{viewInstanceId:viewInstanceId})}};var whenViewInstanceReady=function(viewInstanceId){return new Promise((function(resolve){var record=registry.get(viewInstanceId);if(record&&record.ready){resolve();return}var viewReadyListener=function(payload){if(viewInstanceId===payload.viewInstanceId){eventEmitter.off(EVENT_VIEW_REGISTRY_VIEW_READY,viewReadyListener);resolve()}};eventEmitter.on(EVENT_VIEW_REGISTRY_VIEW_READY,viewReadyListener)}))};return createAPI({cleanUp:cleanUp,createViewInstance:createViewInstance,getViewIdByViewInstance:getViewIdByViewInstance,hasViewInstance:hasViewInstance,off:off,on:on,releaseView:releaseView,retainView:retainView,setViewInstanceReady:setViewInstanceReady,whenViewInstanceReady:whenViewInstanceReady})}};var createViewInstanceRegistry=function(){var eventEmitter=createEventEmitter("view-instance-registry-client");var registry=new Map;var createClient=makeViewInstanceRegistryClient(eventEmitter,registry);return createAPI({createClient:createClient})};var __assign=function(){__assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};var createViewRegistry=function(views){var viewMap=new Map;views.forEach((function(view){viewMap.set(view.id,__assign({},view))}));var getViewById=function(viewId){return viewMap.get(viewId)||null};var getRecords=function(){return Array.from(viewMap.values())};return createAPI({getRecords:getRecords,getViewById:getViewById})};var LifecycleEvent;(function(LifecycleEvent){LifecycleEvent["RenderTreeDidChange"]="renderTreeDidChange"})(LifecycleEvent||(LifecycleEvent={}));var createApplicationShellLifecycle=function(eventEmitter){var _a;var callbacks=(_a={},_a[LifecycleEvent.RenderTreeDidChange]=[],_a);var dispatchLifecycleEvent=function(lifecycleEvent){callbacks[lifecycleEvent].forEach((function(callback){callback()}))};var bindEvents=function(){eventEmitter.on(EVENT_NAVIGATION_LAYOUT_TREE_AFTER_LAYOUT_ADDED,(function(){dispatchLifecycleEvent(LifecycleEvent.RenderTreeDidChange)}));eventEmitter.on(EVENT_NAVIGATION_PIPELINE_AFTER_NAVIGATE,(function(){dispatchLifecycleEvent(LifecycleEvent.RenderTreeDidChange)}));eventEmitter.on(EVENT_NAVIGATION_PIPELINE_AFTER_TRANSITION_END,(function(){dispatchLifecycleEvent(LifecycleEvent.RenderTreeDidChange)}))};var renderTreeDidChange=function(callback){callbacks[LifecycleEvent.RenderTreeDidChange].push(callback)};bindEvents();return createAPI({renderTreeDidChange:renderTreeDidChange})};var createTypeError$d=createTypeErrorFactory("application-shell");var throwIfInvalidDependencies=function(errorPrefix,dependencies){if(!dependencies.pubsub){throw createTypeError$d(errorPrefix+": Provided dependencies are invalid: "+"pubsub should be provided as a dependency")}};var throwIfInvalidViews=function(errorPrefix,views){var errors=validateViewList(views);if(errors.length>0){throw createTypeError$d(errorPrefix+": View list is invalid: "+errors[0])}};var makeApplicationShell=function(){return function createApplicationShell(rootElement,views,dependencies){throwIfInvalidViews("Could not create application shell",views);throwIfInvalidDependencies("Could not create application shell",dependencies);var plugins=dependencies.plugins,pubsub=dependencies.pubsub;var nativeBackButtonPlugin=plugins.BackButton;var lifecycleEventEmitter=createEventEmitter("lifecycle");var navigationTypeRegistry=createNavigationTypeRegistry();var transitionRegistry=createTransitionRegistry();var transitionsConfig=createTransitionsConfig(navigationTypeRegistry,transitionRegistry);var viewRegistry=createViewRegistry(views);var navigationGraphRegistry=createNavigationGraph(views);var navigationLayoutRegistry=createNavigationLayoutRegistry();var navigationMenu=createNavigationMenu(views);var navigationState=createNavigationState();var navigationLayoutTree=createNavigationLayoutTree(lifecycleEventEmitter,navigationLayoutRegistry,navigationState);var viewInstanceRegistry=createViewInstanceRegistry();var navigationPipeline=createNavigationPipeline(lifecycleEventEmitter,viewRegistry,navigationState,rootElement,transitionRegistry,transitionsConfig,viewInstanceRegistry);var createStackNavigationLayout=makeStackNavigationLayout(viewRegistry,navigationPipeline,transitionRegistry,viewInstanceRegistry);var createMenuNavigationLayout=makeMenuNavigationLayout(navigationPipeline,createStackNavigationLayout,transitionRegistry);var createTabsNavigationLayout=makeTabsNavigationLayout(navigationPipeline,createStackNavigationLayout,transitionRegistry);var createModalsNavigationLayout=makeModalsNavigationLayout(navigationPipeline,createStackNavigationLayout,transitionRegistry);navigationLayoutRegistry.registerLayoutFactory(STACK_NAVIGATION_LAYOUT_NAME,createStackNavigationLayout);navigationLayoutRegistry.registerLayoutFactory(MENU_NAVIGATION_LAYOUT_NAME,createMenuNavigationLayout);navigationLayoutRegistry.registerLayoutFactory(TABS_NAVIGATION_LAYOUT_NAME,createTabsNavigationLayout);navigationLayoutRegistry.registerLayoutFactory(MODALS_NAVIGATION_LAYOUT_NAME,createModalsNavigationLayout);navigationTypeRegistry.registerNavigationType(createNavigationTypeChangeRoot(navigationState));navigationTypeRegistry.registerNavigationType(createNavigationTypeModalClose(navigationState));navigationTypeRegistry.registerNavigationType(createNavigationTypeModalOpen(navigationState));navigationTypeRegistry.registerNavigationType(createNavigationTypePop(navigationState));navigationTypeRegistry.registerNavigationType(createNavigationTypePush(navigationState));navigationTypeRegistry.registerNavigationType(createNavigationTypeReplace(navigationState));navigationTypeRegistry.registerNavigationType(createNavigationTypeRoot(navigationState,viewInstanceRegistry));var lifecycle=createApplicationShellLifecycle(lifecycleEventEmitter);var renderTree=createRenderTree(navigationState);var navigationController=createNavigationController({navigationGraphRegistry:navigationGraphRegistry,navigationMenu:navigationMenu,navigationPipeline:navigationPipeline,navigationState:navigationState,navigationTypeRegistry:navigationTypeRegistry,pubsub:pubsub,transitionsConfig:transitionsConfig,viewInstanceRegistry:viewInstanceRegistry,viewRegistry:viewRegistry});createNavigationHistory(navigationState,nativeBackButtonPlugin);return createAPI({lifecycle:lifecycle,navigationController:navigationController,navigationLayoutTree:navigationLayoutTree,navigationMenu:navigationMenu,renderTree:renderTree,transitionRegistry:transitionRegistry,transitionsConfig:transitionsConfig,viewInstanceRegistry:viewInstanceRegistry})}};var createApplicationShell=makeApplicationShell();exports.CHANGE_ROOT_NAVIGATION_TYPE_NAME=CHANGE_ROOT_NAVIGATION_TYPE_NAME;exports.MENU_NAVIGATION_LAYOUT_NAME=MENU_NAVIGATION_LAYOUT_NAME;exports.MODALS_NAVIGATION_LAYOUT_NAME=MODALS_NAVIGATION_LAYOUT_NAME;exports.MODAL_CLOSE_NAVIGATION_TYPE_NAME=MODAL_CLOSE_NAVIGATION_TYPE_NAME;exports.MODAL_OPEN_NAVIGATION_TYPE_NAME=MODAL_OPEN_NAVIGATION_TYPE_NAME;exports.POP_NAVIGATION_TYPE_NAME=POP_NAVIGATION_TYPE_NAME;exports.PUSH_NAVIGATION_TYPE_NAME=PUSH_NAVIGATION_TYPE_NAME;exports.REPLACE_NAVIGATION_TYPE_NAME=REPLACE_NAVIGATION_TYPE_NAME;exports.ROOT_NAVIGATION_TYPE_NAME=ROOT_NAVIGATION_TYPE_NAME;exports.STACK_NAVIGATION_LAYOUT_NAME=STACK_NAVIGATION_LAYOUT_NAME;exports.TABS_NAVIGATION_LAYOUT_NAME=TABS_NAVIGATION_LAYOUT_NAME;exports.createApplicationShell=createApplicationShell;exports.createEventEmitter=createEventEmitter})(this["@backbase/hsdk-app-shell"]=this["@backbase/hsdk-app-shell"]||{});
